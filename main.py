import requests
import time
import os
import threading
from datetime import datetime
from flask import Flask

###########################
#  –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò  #
###########################

BOT_TOKEN = os.getenv("BOT_TOKEN", "")
SDP_API_KEY = os.getenv("SDP_API_KEY", "")

# –ë–∞–∑–æ–≤—ã–π URL ManageEngine SDP
SDP_URL = "https://sd.sadykhan.kz/api/v3/requests"
SDP_REQUEST_URL = "https://sd.sadykhan.kz/requests"

app = Flask(__name__)

# –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º, –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤ –ø–∞–º—è—Ç–∏)
subscribed_chats = set()

# –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∑–∞—è–≤–∫–∏ { request_id: { "status":..., "technician":..., ... } }
known_requests = {}

##################################
#  –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –í TELEGRAM  #
##################################

def send_telegram_message(chat_id, text):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤ —á–∞—Ç.
    –ü—Ä–∏ 403-–æ—à–∏–±–∫–µ (–±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω) —É–¥–∞–ª—è–µ–º chat_id –∏–∑ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.
    """
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    try:
        resp = requests.post(url, json=payload, timeout=10)
        resp.raise_for_status()
    except requests.exceptions.HTTPError as e:
        if resp.status_code == 403:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
            if chat_id in subscribed_chats:
                subscribed_chats.remove(chat_id)
            print(f"‚ùå 403 FORBIDDEN: {chat_id} —É–±–∏—Ä–∞–µ–º –∏–∑ –ø–æ–¥–ø–∏—Å–æ–∫.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {resp.status_code} –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
    except Exception as ex:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {ex}")


def send_to_subscribers(message):
    """–†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º —á–∞—Ç–∞–º."""
    for chat_id in list(subscribed_chats):
        send_telegram_message(chat_id, message)

##################################
#  –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –ó–ê–Ø–í–û–ö –ò–ó SDP  #
##################################

def get_all_requests():
    """
    –¢—è–Ω–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞).
    –ú–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å: –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
    """
    try:
        resp = requests.get(
            SDP_URL,
            headers={"Authtoken": SDP_API_KEY, "Accept": "application/json"},
            timeout=30
        )
        resp.raise_for_status()
        data = resp.json()
        return data.get("requests", [])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ SDP: {e}")
        return []


#########################################
#  –ü–†–û–í–ï–†–ö–ê –ò –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô   #
#########################################

def check_sdp():
    """
    –§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å: –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏.
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º known_requests:
      - –µ—Å–ª–∏ –Ω–æ–≤–∞—è (id –Ω–µ—Ç –≤ known_requests) => —Å–æ–æ–±—â–∞–µ–º ¬´–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞¬ª
      - –µ—Å–ª–∏ –µ—Å—Ç—å, –Ω–æ —Å—Ç–∞—Ç—É—Å (–∏–ª–∏ —Ç–µ—Ö–Ω–∏–∫) –∏–∑–º–µ–Ω–∏–ª—Å—è => —Å–æ–æ–±—â–∞–µ–º ¬´–ò–∑–º–µ–Ω–µ–Ω–∏–µ¬ª
    """
    while True:
        all_reqs = get_all_requests()

        for r in all_reqs:
            req_id = str(r.get("id", "???"))
            subject = r.get("subject", "–ë–µ–∑ —Ç–µ–º—ã") or "–ë–µ–∑ —Ç–µ–º—ã"
            desc = r.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è") or "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"

            # –ë—ã–≤–∞–µ—Ç technician=None => –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è
            technician_info = r.get("technician") or {}
            technician = technician_info.get("name", "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω")

            status_info = r.get("status") or {}
            status = status_info.get("name", "N/A")

            requester_info = r.get("requester") or {}
            requester = requester_info.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä")

            created_time = r.get("created_time", {}).get("display_value", "")

            current_data = {
                "status": status,
                "technician": technician,
                "subject": subject,
                "description": desc,
                "requester": requester,
                "created_time": created_time
            }

            # 1) –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ–º –ø—Ä–æ —ç—Ç—É –∑–∞—è–≤–∫—É => –Ω–æ–≤–∞—è
            if req_id not in known_requests:
                known_requests[req_id] = current_data

                msg = (
                    f"üÜï <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{req_id}</b>\n"
                    f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {requester}\n"
                    f"üìå <b>–¢–µ–º–∞:</b> {subject}\n"
                    f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {desc}\n"
                    f"üîß <b>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:</b> {technician}\n"
                    f"üïë <b>–°—Ç–∞—Ç—É—Å:</b> {status}\n"
                    f"üìÖ <b>–î–∞—Ç–∞:</b> {created_time}\n"
                    f"üîó <a href='{SDP_REQUEST_URL}/{req_id}'>–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É</a>"
                )
                send_to_subscribers(msg)

            else:
                # 2) –ó–∞—è–≤–∫–∞ —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–∞: –ø—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                old_data = known_requests[req_id]
                changed_fields = []

                # –°–º–µ–Ω–∏–ª—Å—è —Å—Ç–∞—Ç—É—Å?
                if old_data["status"] != current_data["status"]:
                    changed_fields.append(
                        f"–°—Ç–∞—Ç—É—Å: {old_data['status']} ‚Üí {current_data['status']}"
                    )

                # –°–º–µ–Ω–∏–ª—Å—è —Ç–µ—Ö–Ω–∏–∫?
                if old_data["technician"] != current_data["technician"]:
                    changed_fields.append(
                        f"–¢–µ—Ö–Ω–∏–∫: {old_data['technician']} ‚Üí {current_data['technician']}"
                    )

                # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                if changed_fields:
                    changes_text = "\n".join(changed_fields)
                    msg = (
                        f"‚úèÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –∑–∞—è–≤–∫–µ #{req_id}</b>\n"
                        f"{changes_text}\n"
                        f"üîó <a href='{SDP_REQUEST_URL}/{req_id}'>–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É</a>"
                    )
                    send_to_subscribers(msg)

                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
                known_requests[req_id] = current_data

        time.sleep(60)


############################
#  TELEGRAM LONG POLLING   #
############################

def telegram_bot():
    """
    –§–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫: –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫ –¥–µ—Ä–≥–∞–µ—Ç getUpdates.
    /start => –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º, /stop => –æ—Ç–ø–∏—Å—ã–≤–∞–µ–º.
    """
    offset = None
    while True:
        try:
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates"
            resp = requests.get(url, params={"offset": offset}, timeout=30)
            resp.raise_for_status()
            updates = resp.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ getUpdates: {e}")
            time.sleep(5)
            continue

        for upd in updates.get("result", []):
            offset = upd["update_id"] + 1

            if "message" in upd:
                chat_id = upd["message"]["chat"]["id"]
                text = upd["message"].get("text", "").strip().lower()

                if text in ("/start", "start"):
                    subscribed_chats.add(chat_id)
                    send_telegram_message(chat_id, "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –∑–∞—è–≤–∫–∞–º (–Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤).")
                elif text in ("/stop", "stop"):
                    if chat_id in subscribed_chats:
                        subscribed_chats.remove(chat_id)
                        send_telegram_message(chat_id, "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
                    else:
                        send_telegram_message(chat_id, "–í—ã –∏ —Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.")
                else:
                    send_telegram_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –∏–ª–∏ /stop.")

        time.sleep(2)


############################
#  FLASK - –≤–µ–±-—Å–µ—Ä–≤–µ—Ä      #
############################

@app.route("/")
def home():
    return "Bot is running!"

if __name__ == "__main__":
    # 1) –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏
    threading.Thread(target=telegram_bot, daemon=True).start()
    threading.Thread(target=check_sdp, daemon=True).start()

    # 2) –ó–∞–ø—É—Å–∫–∞–µ–º Flask
    port = int(os.getenv("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
