import requests
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
import logging

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///requests.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# –ú–æ–¥–µ–ª—å –∑–∞—è–≤–∫–∏
class Request(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    subject = db.Column(db.String(200))
    author = db.Column(db.String(100))
    technician = db.Column(db.String(100))
    status = db.Column(db.String(50))
    created_time = db.Column(db.String(50))
    updated_time = db.Column(db.String(50))

    def get_changes(self, new_data):
        changes = []
        if self.subject != new_data['subject']:
            changes.append(f"üìå –¢–µ–º–∞: {self.subject} ‚Üí {new_data['subject']}")
        if self.technician != new_data['technician']:
            changes.append(f"üîß –ù–∞–∑–Ω–∞—á–µ–Ω–æ: {self.technician} ‚Üí {new_data['technician']}")
        if self.status != new_data['status']:
            changes.append(f"‚öôÔ∏è –°—Ç–∞—Ç—É—Å: {self.status} ‚Üí {new_data['status']}")
        return changes

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(chat_id, text):
    bot_token = 'YOUR_BOT_TOKEN'
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
    payload = {'chat_id': chat_id, 'text': text, 'parse_mode': 'Markdown'}
    response = requests.post(url, json=payload)
    if response.status_code != 200:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
def format_new_request(request):
    return (
        f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{request.id}\n"
        f"üìå –¢–µ–º–∞: {request.subject}\n"
        f"üë§ –ê–≤—Ç–æ—Ä: {request.author}\n"
        f"üîß –ù–∞–∑–Ω–∞—á–µ–Ω–æ: {request.technician}\n"
        f"‚öôÔ∏è –°—Ç–∞—Ç—É—Å: {request.status}\n"
        f"üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {request.created_time}\n"
        f"üîó [–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É](https://sd.sadykhan.kz/WorkOrder.do?woMode=viewWO&woID={request.id})"
    )

def format_update_message(request_id, changes):
    message = f"‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞ #{request_id}\n"
    for change in changes:
        message += f"{change}\n"
    message += f"üîó [–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É](https://sd.sadykhan.kz/WorkOrder.do?woMode=viewWO&woID={request_id})"
    return message

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫
def process_requests(api_data, chat_id):
    for item in api_data:
        request_id = item['id']
        existing_request = Request.query.get(request_id)

        if not existing_request:
            # –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞
            new_request = Request(
                id=request_id,
                subject=item['subject'],
                author=item['author'],
                technician=item['technician'],
                status=item['status'],
                created_time=item['created_time'],
                updated_time=item['updated_time']
            )
            db.session.add(new_request)
            db.session.commit()
            message = format_new_request(new_request)
            send_telegram_message(chat_id, message)
        else:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            changes = existing_request.get_changes(item)
            if changes:
                existing_request.subject = item['subject']
                existing_request.technician = item['technician']
                existing_request.status = item['status']
                existing_request.updated_time = item['updated_time']
                db.session.commit()
                message = format_update_message(request_id, changes)
                send_telegram_message(chat_id, message)

# –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞
if __name__ == '__main__':
    db.create_all()
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
    api_data = [{
        'id': 829,
        'subject': '–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –°–≤–µ—Ç–ª–∞–Ω–∞ –ò–Ω–Ω–æ–∫–µ–Ω—Ç—å–µ–≤–Ω–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ –°–§–õ –Ω–µ –æ–∂–µ—Ç –∑–∞–π—Ç–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É 1–°.',
        'author': '–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä3',
        'technician': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',  # –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"
        'status': '–í —Ä–∞–±–æ—Ç–µ',         # –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å "–û—Ç–∫—Ä—ã—Ç–æ"
        'created_time': '27/03/2025 09:02 AM',
        'updated_time': '27/03/2025 09:10 AM'
    }]
    process_requests(api_data, 'YOUR_CHAT_ID')
